//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleSuite.Resources {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SampleSuite.Resources.Strings", typeof(Strings).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        internal static string Action {
            get {
                return ResourceManager.GetString("Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add/Remove Items.
        /// </summary>
        internal static string AddRemoveItems {
            get {
                return ResourceManager.GetString("AddRemoveItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        internal static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blue:.
        /// </summary>
        internal static string Blue {
            get {
                return ResourceManager.GetString("Blue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brushes.
        /// </summary>
        internal static string Brushes {
            get {
                return ResourceManager.GetString("Brushes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the different brushes that can be used to style UI elements.  Some objects are limited in the type of brush that they can use.  This limitation is determined by the object&apos;s native implementation that is provided by each platform, which means that different results could be seen depending on the platform being run.  If a brush cannot be used, a default value provided by the system will be used in its place..
        /// </summary>
        internal static string BrushesSampleDescription {
            get {
                return ResourceManager.GetString("BrushesSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        internal static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data Binding.
        /// </summary>
        internal static string DataBinding {
            get {
                return ResourceManager.GetString("DataBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double Tapped!.
        /// </summary>
        internal static string DoubleTapped {
            get {
                return ResourceManager.GetString("DoubleTapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the index at which to insert the new item.  Valid values are 0-{0}..
        /// </summary>
        internal static string EnterIndexValue {
            get {
                return ResourceManager.GetString("EnterIndexValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File IO.
        /// </summary>
        internal static string FileIO {
            get {
                return ResourceManager.GetString("FileIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Written Successfully.
        /// </summary>
        internal static string FileWrittenSuccessfully {
            get {
                return ResourceManager.GetString("FileWrittenSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flyout.
        /// </summary>
        internal static string Flyout {
            get {
                return ResourceManager.GetString("Flyout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a content flyout.  It renders UI elements and is dismissed when the user taps outside of its bounds..
        /// </summary>
        internal static string FlyoutContent {
            get {
                return ResourceManager.GetString("FlyoutContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the Flyout object.  Flyouts appear over regular application content much like a Popup.  Unlike a Popup, however, Flyouts are anchored to other UI elements and will always be dismissed when the user taps outside of their bounds.  Flyouts come in two flavors: a content flyout and a menu flyout.  Content flyouts show a UI element in the same manner that a Popup does; menu flyouts present a list of selectable options and dismiss themselves when an option is chosen..
        /// </summary>
        internal static string FlyoutSampleDescription {
            get {
                return ResourceManager.GetString("FlyoutSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forward.
        /// </summary>
        internal static string Forward {
            get {
                return ResourceManager.GetString("Forward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go.
        /// </summary>
        internal static string Go {
            get {
                return ResourceManager.GetString("Go", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Green:.
        /// </summary>
        internal static string Green {
            get {
                return ResourceManager.GetString("Green", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holding Canceled!.
        /// </summary>
        internal static string HoldingCanceled {
            get {
                return ResourceManager.GetString("HoldingCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holding Completed!.
        /// </summary>
        internal static string HoldingCompleted {
            get {
                return ResourceManager.GetString("HoldingCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holding Gesture.
        /// </summary>
        internal static string HoldingGesture {
            get {
                return ResourceManager.GetString("HoldingGesture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the holding gesture.  Hold down a pointer on the shape below, and the gesture will trigger after a short time delay.  Releasing the pointer will complete the gesture.  If you move the pointer too much, the gesture will be canceled..
        /// </summary>
        internal static string HoldingGestureSampleDescription {
            get {
                return ResourceManager.GetString("HoldingGestureSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holding Started!.
        /// </summary>
        internal static string HoldingStarted {
            get {
                return ResourceManager.GetString("HoldingStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image.
        /// </summary>
        internal static string Image {
            get {
                return ResourceManager.GetString("Image", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the Image element, which renders image data taken from a local or remote file.  Images have several stretching options that affect the way they fill their parent space.  These stretching options can be seen below..
        /// </summary>
        internal static string ImageSampleDescription {
            get {
                return ResourceManager.GetString("ImageSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index value is out of range..
        /// </summary>
        internal static string IndexOutOfRange {
            get {
                return ResourceManager.GetString("IndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the InkCanvas control, which allows users to draw ink strokes with an input device such as a mouse or a stylus..
        /// </summary>
        internal static string InkCanvasSampleDescription {
            get {
                return ResourceManager.GetString("InkCanvasSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Type.
        /// </summary>
        internal static string InputType {
            get {
                return ResourceManager.GetString("InputType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index value is invalid..
        /// </summary>
        internal static string InvalidIndexValue {
            get {
                return ResourceManager.GetString("InvalidIndexValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IO Write Error.
        /// </summary>
        internal static string IOWriteError {
            get {
                return ResourceManager.GetString("IOWriteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Item.
        /// </summary>
        internal static string Item {
            get {
                return ResourceManager.GetString("Item", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Label.
        /// </summary>
        internal static string Label {
            get {
                return ResourceManager.GetString("Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the Label control, which renders a string of read-only text.  There are several alignment options that affect the way the text is laid out.  These alignment options can be seen below..
        /// </summary>
        internal static string LabelSampleDescription {
            get {
                return ResourceManager.GetString("LabelSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates dynamic insertion and removal of items from the ListBox control.  Use the buttons in the menu to manipulate the list..
        /// </summary>
        internal static string ListBoxAddRemoveSampleDescription {
            get {
                return ResourceManager.GetString("ListBoxAddRemoveSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the ListBox&apos;s ability to divide its content into separate sections.  Each section comes with its own customizable header that serves as a separator between itself and the previous section.  Typically, this header will &quot;float&quot; on top of the section&apos;s content, staying in view until the rest of the section is scrolled out of sight..
        /// </summary>
        internal static string ListBoxSectioningSampleDescription {
            get {
                return ResourceManager.GetString("ListBoxSectioningSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Flyout.
        /// </summary>
        internal static string MenuFlyout {
            get {
                return ResourceManager.GetString("MenuFlyout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode: {0}.
        /// </summary>
        internal static string Mode {
            get {
                return ResourceManager.GetString("Mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MultiBinding.
        /// </summary>
        internal static string MultiBinding {
            get {
                return ResourceManager.GetString("MultiBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates a data binding with a target property bound to multiple source properties.  Each one of the sliders here determine one of the color components for the UI element below.  Every time one of the slider values is changed, the color is changed to match the values of all sliders.  Additionally, this sample also demonstrates how individual bindings that make up a MultiBinding can define their own behavioral characteristics, in this case having a different mode for the label text that shows [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MultiBindingSampleDescription {
            get {
                return ResourceManager.GetString("MultiBindingSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal.
        /// </summary>
        internal static string Normal {
            get {
                return ResourceManager.GetString("Normal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option.
        /// </summary>
        internal static string Option {
            get {
                return ResourceManager.GetString("Option", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pen Size and Shape.
        /// </summary>
        internal static string PenSizeAndShape {
            get {
                return ResourceManager.GetString("PenSizeAndShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointer Events.
        /// </summary>
        internal static string PointerEvents {
            get {
                return ResourceManager.GetString("PointerEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the ability to capture events from pointer devices such as a mouse, a stylus, or a finger on a touch screen.  When a UI element detects an event from one of these devices, it sends information about the event to the application.  This information includes the type of the pointer device, the location of the pointer relative to the element, the pressure being applied by the pointer, and a time stamp provided by the system..
        /// </summary>
        internal static string PointerEventsSampleDescription {
            get {
                return ResourceManager.GetString("PointerEventsSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position.
        /// </summary>
        internal static string Position {
            get {
                return ResourceManager.GetString("Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pressure.
        /// </summary>
        internal static string Pressure {
            get {
                return ResourceManager.GetString("Pressure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read/Write.
        /// </summary>
        internal static string ReadWrite {
            get {
                return ResourceManager.GetString("ReadWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates writing to and reading from a file on the hard disk.  Type some text below and press the Write button in the menu to write it to a file.  This file will persist for as long as the application is installed.  Press the Read button in the menu to read the text that was last saved to the file and have it inserted below..
        /// </summary>
        internal static string ReadWriteSampleDescription {
            get {
                return ResourceManager.GetString("ReadWriteSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red:.
        /// </summary>
        internal static string Red {
            get {
                return ResourceManager.GetString("Red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        internal static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to R: {0}, G: {1}, B: {2}.
        /// </summary>
        internal static string RGB {
            get {
                return ResourceManager.GetString("RGB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right Tapped!.
        /// </summary>
        internal static string RightTapped {
            get {
                return ResourceManager.GetString("RightTapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root Views.
        /// </summary>
        internal static string RootViews {
            get {
                return ResourceManager.GetString("RootViews", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates different kinds of root views for the application window.  The SplitView with TabView combination places SplitViews inside of the tabs of a TabView.  For an alternative effect, you could try placing a TabView inside of a SplitView.  When you select one of the options below, the content of the application window will be set to the selected option and you will be brought back to the Table of Contents..
        /// </summary>
        internal static string RootViewSampleDescription {
            get {
                return ResourceManager.GetString("RootViewSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotation.
        /// </summary>
        internal static string Rotation {
            get {
                return ResourceManager.GetString("Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale.
        /// </summary>
        internal static string Scale {
            get {
                return ResourceManager.GetString("Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Section.
        /// </summary>
        internal static string Section {
            get {
                return ResourceManager.GetString("Section", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sectioning.
        /// </summary>
        internal static string Sectioning {
            get {
                return ResourceManager.GetString("Sectioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shapes.
        /// </summary>
        internal static string Shapes {
            get {
                return ResourceManager.GetString("Shapes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the various shape elements that can be used to programmatically draw graphics in an application.  Shapes can be stroked, filled, and dashed.  Path shapes in particular allow for multiple complex figures within a single element by defining groups of lines, arcs, and curves..
        /// </summary>
        internal static string ShapesSampleDescription {
            get {
                return ResourceManager.GetString("ShapesSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single Binding.
        /// </summary>
        internal static string SingleBinding {
            get {
                return ResourceManager.GetString("SingleBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates a simple data binding between two objects.  As the text of one TextBox changes, the text of the other TextBox will change to match it.  You can change the direction of the binding by pressing the button below..
        /// </summary>
        internal static string SingleBindingSampleDescription {
            get {
                return ResourceManager.GetString("SingleBindingSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single View.
        /// </summary>
        internal static string SingleView {
            get {
                return ResourceManager.GetString("SingleView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skew.
        /// </summary>
        internal static string Skew {
            get {
                return ResourceManager.GetString("Skew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Object:.
        /// </summary>
        internal static string SourceObject {
            get {
                return ResourceManager.GetString("SourceObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SplitView.
        /// </summary>
        internal static string SplitView {
            get {
                return ResourceManager.GetString("SplitView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SplitView + Tabs.
        /// </summary>
        internal static string SplitViewWithTabs {
            get {
                return ResourceManager.GetString("SplitViewWithTabs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Systems and Sensors.
        /// </summary>
        internal static string SystemsAndSensors {
            get {
                return ResourceManager.GetString("SystemsAndSensors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tab {0}.
        /// </summary>
        internal static string Tab {
            get {
                return ResourceManager.GetString("Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application demonstrates various features of the Prism framework.  All code written for the application is free to use, copy, etc..
        /// </summary>
        internal static string TableOfContentsGreeting {
            get {
                return ResourceManager.GetString("TableOfContentsGreeting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an option below to begin..
        /// </summary>
        internal static string TableOfContentsInstructions {
            get {
                return ResourceManager.GetString("TableOfContentsInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Table of Contents.
        /// </summary>
        internal static string TableOfContentsTitle {
            get {
                return ResourceManager.GetString("TableOfContentsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TabView.
        /// </summary>
        internal static string TabView {
            get {
                return ResourceManager.GetString("TabView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tap Gestures.
        /// </summary>
        internal static string TapGestures {
            get {
                return ResourceManager.GetString("TapGestures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the various types of supported tap gestures.  There are three types of tap gestures: single taps, double taps, and right taps (long presses for touch input).  Use the square below to perform the gestures..
        /// </summary>
        internal static string TapGesturesSampleDescription {
            get {
                return ResourceManager.GetString("TapGesturesSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tapped!.
        /// </summary>
        internal static string Tapped {
            get {
                return ResourceManager.GetString("Tapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target Object:.
        /// </summary>
        internal static string TargetObject {
            get {
                return ResourceManager.GetString("TargetObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp.
        /// </summary>
        internal static string Timestamp {
            get {
                return ResourceManager.GetString("Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Dash.
        /// </summary>
        internal static string ToggleDash {
            get {
                return ResourceManager.GetString("ToggleDash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transform.
        /// </summary>
        internal static string Transform {
            get {
                return ResourceManager.GetString("Transform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the use of different transforming options to modify the way that an element is rendered.  The &apos;Normal&apos; example shows what the element looks like without any transformation applied to it.  The other examples show the use of TranslateTransform, RotateTransform, ScaleTransform, and SkewTransform..
        /// </summary>
        internal static string TransformSampleDescription {
            get {
                return ResourceManager.GetString("TransformSampleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translation.
        /// </summary>
        internal static string Translation {
            get {
                return ResourceManager.GetString("Translation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UI Controls.
        /// </summary>
        internal static string UIControls {
            get {
                return ResourceManager.GetString("UIControls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified category could not be found.  Please go back and select a different one..
        /// </summary>
        internal static string UnknownCategoryError {
            get {
                return ResourceManager.GetString("UnknownCategoryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sample demonstrates the WebBrowser control, which is able to navigate to web addresses and render HTML content within the application.  The URI must be exact, and it must include the protocol (http, https, ftp, etc.)..
        /// </summary>
        internal static string WebBrowserSampleDescription {
            get {
                return ResourceManager.GetString("WebBrowserSampleDescription", resourceCulture);
            }
        }
    }
}
